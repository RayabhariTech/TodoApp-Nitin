[{"/home/nitin/React/todo-list/src/index.js":"1","/home/nitin/React/todo-list/src/App.js":"2","/home/nitin/React/todo-list/src/components/TodoForm.js":"3","/home/nitin/React/todo-list/src/components/TodoItem.js":"4"},{"size":221,"mtime":1608733132645,"results":"5","hashOfConfig":"6"},{"size":140,"mtime":1608733062331,"results":"7","hashOfConfig":"6"},{"size":3687,"mtime":1608879899296,"results":"8","hashOfConfig":"6"},{"size":1896,"mtime":1608879957845,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"tdmoy3",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/nitin/React/todo-list/src/index.js",[],["20","21"],"/home/nitin/React/todo-list/src/App.js",[],"/home/nitin/React/todo-list/src/components/TodoForm.js",["22"],"import React, {Component} from 'react'\nimport TodoItem from './TodoItem'\nimport {confirmAlert} from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\n\nclass TodoForm extends Component {\n    constructor()\n    {\n        super()\n        this.state = {\n            todoList: [],\n            errorMessage: '',\n            editing: false,\n            currentItem: {\n                text: '',\n                key: ''\n            }\n        }\n    }\n\n    handleTodoSubmit = (event) => {\n        event.preventDefault();\n        const items = this.state.currentItem;\n        if (items.text === '' || items.text.trim() === '') {\n            this.setState({errorMessage: \"Enter a value\"})\n        } else {\n            const newArrayList = [\n                items, ...this.state.todoList\n            ]\n            this.setState({\n                todoList: newArrayList,\n                errorMessage: '',\n                currentItem: {\n                    text: '',\n                    key: ''\n                }\n            })\n        }\n    }\n\n    handleInputChange = (event) => {\n        this.setState({\n            currentItem: {\n                text: event.target.value,\n                key: Date.now()\n            }\n        })\n\n    }\n\n    handleTodoDelete = (key) => {\n        const newData = this\n            .state\n            .todoList\n            .filter(item => item.key !== key)\n        this.setState({todoList: newData})\n    }\n\n    handleDelete = (value, key) => {\n        confirmAlert({\n            title: 'Confirm to delete',\n            message: `Are you sure to do this ${value}`,\n            buttons: [\n                {\n                    label: 'Yes',\n                    onClick: () => this.handleTodoDelete(key)\n                }, {\n                    label: 'No',\n                    onClick: () => {}\n                }\n            ]\n        });\n    }\n\n    handleTodoEdit = (text, key) => {\n        if (this.state.editing === true) {\n            const items = this.state.todoList;\n            items.map(item => {\n                if (item.key === key) {\n                    item.text = text;\n                }\n            })\n            this.setState({todoList: items})\n        }\n        this.setState({\n            currentItem: {\n                text: '',\n                key: ''\n            }\n        })\n    };\n\n    changeEditState = () => {\n        this.setState(preState => {\n            return {\n                editing: !preState.editing\n            }\n        })\n    }\n\n    render() {\n        return (\n            <div className='todo-container'>\n                <div className='todo-form' autoComplete='off'>\n                    <div className='form-heading'>\n                        <h2>Todo List</h2>\n                    </div>\n                    <div className='form-list'>\n                        <input\n                            className=\"todo-input\"\n                            type='text'\n                            value={this.state.currentItem.text}\n                            onChange={this.handleInputChange}\n                            placeholder=\"Add Items\"/>\n                        <button className='todo-add-button' onClick={this.handleTodoSubmit}>+</button>\n                        <span className='error-message'>{this.state.errorMessage}</span>\n                    </div>\n                    <TodoItem\n                        todoList={this.state.todoList}\n                        deleteTodo={this.handleDelete}\n                        editTodo={this.handleTodoEdit}\n                        changeEditState={this.changeEditState}/>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default TodoForm","/home/nitin/React/todo-list/src/components/TodoItem.js",[],{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":78,"column":28,"nodeType":"29","messageId":"30","endLine":78,"endColumn":30},"no-native-reassign",["31"],"no-negated-in-lhs",["32"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]